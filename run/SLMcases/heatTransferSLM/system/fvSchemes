/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

d2dt2Schemes
{
    default          steadyState;
    // Euler
    // backward
    //steadyState
}

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear orthogonal;
    grad(DU)         extendedLeastSquares 0;
    snGradCorr(DU)   extendedLeastSquares 0;
    // grad(p)         Gauss linear;
    // Gauss
    // beGauss
    // cellLimited
    // cellMDLimited
    // extendedLeastSquares
    // faceLimited
    // faceMDLimited
    // fourth
    // leastSquares
    // leastSquaresSolidInterface
}

divSchemes
{
    default         Gauss upwind; //GammaV 0.2;
    div(sigma)      Gauss skewCorrected linear;
    // div(phi,U)      Gauss GammaV 0.2;
    // div(phi,T)      Gauss Gamma 0.2;
   //  div(phi,U)      Gauss linear;
   // div(phi,U)      Gauss linearUpwind grad(U);
   // div(phi,U)      Gauss LUST grad(U);
   // div(phi,U)      Gauss LUST unlimitedGrad(U);
   // div(phi,U)      Gauss limitedLinear 1;
   // div(phi,U)      Gauss upwind;
}

laplacianSchemes
{
    default                      Gauss linear orthogonal;
    laplacian(DDU,DU)            Gauss linear orthogonal;
    // laplacian(DDU,DU)            Gauss reverseLinear orthogonal;
    // laplacian((mu|rho0),U)       Gauss linear corrected;
    // laplacian((1|A(U)),p)          Gauss linear corrected;
    // laplacian((k|(rho0*Cp)),T)   Gauss linear corrected;
    // limited corrected 0.33
    // default         Gauss linear corrected;
    // default         Gauss linear limited corrected 0.33;
    // default         Gauss linear limited corrected 0.5;
    // default         Gauss linear orthogonal;
    // default         Gauss linear uncorrected;
}

interpolationSchemes
{
    default           linear;
    // interpolate(HbyA) linear;
    // laplacian(DT,T)   Gauss linear corrected;
}

snGradSchemes
{
    default         Gauss linear orthogonal;
    snGrad(DU)       orthogonal;
    // snGrad(DU)       limited corrected 0.5;
//     default         corrected;
// default         limited corrected 0.33;
// default         limited corrected 0.5;
// default         orthogonal;
// default         uncorrected;
}


// ************************************************************************* //
